name: Deploy play-baseball-fe to LightSail

on:
  push:
    branches:
      - main
    paths:
      - "fe/play-baseball-fe/**"
      - ".github/workflows/FE CD.yml"

env:
  DOCKER_IMAGE: seung093/play-baseball-fe

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: ./fe/play-baseball-fe
          push: true
          tags: ${{ env.DOCKER_IMAGE }}:latest
          build-args: |
            NEXT_PUBLIC_API_URL=${{ secrets.NEXT_PUBLIC_API_URL }}
            NEXT_PUBLIC_NEC=${{ secrets.NEXT_PUBLIC_NEC }}

      - name: Deploy to LightSail
        env:
          PRIVATE_KEY: ${{ secrets.FE_KEY }}
          HOST: ${{ secrets.FE_HOST }}
          USER: ubuntu
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
            # Remove old images
            echo "Removing dangling images..."
            docker images --filter "dangling=true" -q | xargs -r docker rmi
            echo "Removing old versions of ${{ env.DOCKER_IMAGE }}..."
            docker images | grep "${{ env.DOCKER_IMAGE }}" | grep -v "latest" | awk '{print $3}' | xargs -r docker rmi
          
            # Pull new image
            docker pull ${{ env.DOCKER_IMAGE }}:latest
          
            # Stop and remove old container
            docker stop play-baseball-fe || true
            docker rm play-baseball-fe || true
          
            # Run new container
            docker run -d --name play-baseball-fe -p 3000:3000 ${{ env.DOCKER_IMAGE }}:latest
          
            echo "Updating Caddyfile..."
            echo "${{ secrets.NEXT_PUBLIC_NEC }} {
              reverse_proxy localhost:3000
            }" | sudo tee /etc/caddy/Caddyfile
          
            echo "Reloading Caddy config..."
            sudo systemctl reload caddy
          
            echo "Remaining images:"
            docker images
          EOF
          rm -f private_key

      - name: Check container logs
        env:
          PRIVATE_KEY: ${{ secrets.FE_KEY }}
          HOST: ${{ secrets.FE_HOST }}
          USER: ubuntu
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER}@${HOST} << EOF
            timeout 30s docker logs -f play-baseball-fe || true
          EOF
          rm -f private_key